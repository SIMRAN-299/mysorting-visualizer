{"version":3,"sources":["sortingAlgorithm.js","Bubblesort.js","MyHeapsort.js","Quicksort.js","Slider.jsx","Card.jsx","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","mybubblesort","result","temp2","heapify","n","largest","l","r","h1","h2","heapSort","myheapsort","MyQuicksort","temp","low","high","pi","a","pivot","height1","height2","partition","QS","makeStyles","theme","root","width","spacing","margin","height","iOSBoxShadow","withStyles","color","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","border","borderRadius","marginRight","PRIMARY_COLOR","sorting_already_running","SortingVisualizer","props","state","speed","bar","mywidth","this","resetArray","randomIntFromInterval","setState","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","newHeight","console","log","alert","timer","pivotbar","barone","bartwo","heapsort","bar1","bar2","cs","getElementById","value","new_array_size","n_width","round","className","type","id","name","min","max","onChange","changespeed","changeNumberofarray","map","idx","onClick","mergeSort","quickSort","bubbleSort","React","Component","random","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.7c43d1a0.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    \r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, i]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, i]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([j, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([j, j]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  ","const mybubblesort=(array)=>{\r\n   const result=[];\r\n   for(let i=0;i<array.length;i++){\r\n       for(let j=0;j<array.length-i-1;j++){\r\n           result.push([j,j+1]);\r\n           result.push([j,j+1]);\r\n           if(array[j]<array[j+1]){\r\n                  result.push([j,j]);\r\n           }\r\n           else{\r\n                  \r\n                  const temp2=array[j+1];\r\n                  array[j+1]=array[j];\r\n                  array[j]=temp2;\r\n                  result.push([[j,array[j]],[j+1,array[j+1]]]);\r\n                  \r\n           }\r\n       }\r\n   }\r\n\r\n   return result;\r\n\r\n}\r\nexport default mybubblesort;","\r\nlet animations=[];\r\nfunction heapify(array,n,i) \r\n{ \r\n    let largest = i; \r\n    let l = 2 * i + 1; // left = 2*i + 1 \r\n    let r = 2 * i + 2; // right = 2*i + 2 \r\n  \r\n    // If left child is larger than root \r\n    if (l < n && array[l] > array[largest]) \r\n        largest = l; \r\n  \r\n    // If right child is larger than largest so far \r\n    if (r < n && array[r] > array[largest]) \r\n        largest = r; \r\n  \r\n    // If largest is not root \r\n    if (largest != i) { \r\n        //swap(array[i], array[largest]); \r\n        const [h1,h2]=[array[i],array[largest]];\r\n    \r\n        array[i]=h2;\r\n        array[largest]=h1;\r\n        animations.push([\"swap\",[[i,h2],[largest,h1]]]);\r\n  \r\n        // Recursively heapify the affected sub-tree \r\n        heapify(array, n, largest); \r\n    } \r\n} \r\n  \r\n// main function to do heap sort \r\nfunction myheapsort(array,n) \r\n{ \r\n    // Build heap (rearrange array) \r\n    for (let i = n / 2 - 1; i >= 0; i--) \r\n        heapify(array, n, i); \r\n  \r\n    // One by one extract an element from heap \r\n    for (let i = n - 1; i >= 0; i--) { \r\n        // Move current root to end\r\n        const [h1,h2]=[array[0],array[i]];\r\n    \r\n        array[i]=h1;\r\n        array[0]=h2;\r\n        animations.push([\"swap\",[[i,h1],[0,h2]]]); \r\n        //swap(array[0], array[i]); \r\n  \r\n        // call max heapify on the reduced heap \r\n        heapify(array, i, 0); \r\n    } \r\n} \r\nfunction heapSort(array){\r\n     animations=[];\r\n      myheapsort(array,array.length)\r\n      return animations;\r\n}\r\nexport default heapSort;","\r\nlet animations=[];\r\nlet count=0;\r\nfunction QS(array){\r\n    animations=[];\r\n    \r\n    MyQuicksort(array,0,array.length-1);\r\n   \r\n\r\n    \r\n    return animations;\r\n}\r\nfunction MyQuicksort(temp,low,high){\r\n    \r\n    if (low < high) \r\n    { \r\n        \r\n        const pi = partition(temp, low, high); \r\n        \r\n        \r\n     \r\n        MyQuicksort(temp, low, pi - 1); \r\n        MyQuicksort(temp, pi + 1, high); \r\n    } \r\n    else{\r\n        return;\r\n    }\r\n    \r\n}\r\n\r\nfunction partition(a,low,high){\r\n    let pivot = a[high]; \r\n    animations.push([\"pivot\",high]);\r\n    \r\n    count++;\r\n    let i = (low - 1);\r\n \r\n    for (let j = low; j <= high - 1; j++) \r\n    { \r\n        \r\n        if (a[j] < pivot) \r\n        { \r\n            i++;\r\n            const h1=a[i];\r\n            const h2=a[j];\r\n            \r\n            animations.push([\"swap\",[[i,h2],[j,h1]]]);\r\n            //console.log(i,h2,j,h1);\r\n            \r\n            \r\n        \r\n            a[j]=h1;\r\n            a[i]=h2;\r\n             \r\n        } \r\n    } \r\n    const height1=a[i+1];\r\n    const height2=a[high];\r\n     \r\n    animations.push([\"swap\",[[i+1,height2],[high,height1]]]);\r\n    //console.log(i+1,height2,high,height1);\r\n    a[i+1]=height2;\r\n    a[high]=height1;\r\n    \r\n    return (i + 1); \r\n}\r\nexport default QS;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst iOSBoxShadow =\r\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n  },\r\n  {\r\n    value: 20,\r\n  },\r\n  {\r\n    value: 37,\r\n  },\r\n  {\r\n    value: 100,\r\n  },\r\n];\r\n\r\nconst IOSSlider = withStyles({\r\n  root: {\r\n    color: '#3880ff',\r\n    height: 2,\r\n    padding: '15px 0',\r\n  },\r\n  thumb: {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: '#fff',\r\n    boxShadow: iOSBoxShadow,\r\n    marginTop: -14,\r\n    marginLeft: -14,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        boxShadow: iOSBoxShadow,\r\n      },\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 12px)',\r\n    top: -22,\r\n    '& *': {\r\n      background: 'transparent',\r\n      color: '#000',\r\n    },\r\n  },\r\n  track: {\r\n    height: 2,\r\n  },\r\n  rail: {\r\n    height: 2,\r\n    opacity: 0.5,\r\n    backgroundColor: '#bfbfbf',\r\n  },\r\n  mark: {\r\n    backgroundColor: '#bfbfbf',\r\n    height: 8,\r\n    width: 1,\r\n    marginTop: -3,\r\n  },\r\n  markActive: {\r\n    opacity: 1,\r\n    backgroundColor: 'currentColor',\r\n  },\r\n})(Slider);\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst AirbnbSlider = withStyles({\r\n  root: {\r\n    color: '#3a8589',\r\n    height: 3,\r\n    padding: '13px 0',\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: '#fff',\r\n    border: '1px solid currentColor',\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: '#ebebeb 0 2px 2px',\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: '#ccc 0 2px 3px 1px',\r\n    },\r\n    '& .bar': {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: 'currentColor',\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 3,\r\n  },\r\n  rail: {\r\n    color: '#d8d8d8',\r\n    opacity: 1,\r\n    height: 3,\r\n  },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n  return (\r\n    <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Typography gutterBottom>pretto.fr</Typography>\r\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} />\r\n      <div className={classes.margin} />\r\n      \r\n      \r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport {getMergeSortAnimations} from './sortingAlgorithm.js';\r\nimport './cardstyle.css';\r\nimport mybubblesort from './Bubblesort.js';\r\nimport heapsort from './MyHeapsort.js';\r\nimport MyQuicksort from './Quicksort';\r\nimport Slider from './Slider';\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 10;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nconst NUMBER_OF_ARRAY_BARS = 50;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = 'rgba(255, 255, 255, 0.25)';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = 'red';\r\nconst WIDTH=14;\r\nlet sorting_already_running=0;\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n\r\n    this.state = {\r\n      array: [],\r\n      speed:ANIMATION_SPEED_MS,\r\n      bar:NUMBER_OF_ARRAY_BARS,\r\n      mywidth:WIDTH,\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i <this.state.bar; i++) {\r\n      array.push(randomIntFromInterval(5, 530));\r\n    }\r\n    this.setState({array});\r\n  }\r\n\r\n  mergeSort() {\r\n      if(sorting_already_running===0){\r\n      sorting_already_running=1;\r\n\r\n      \r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    \r\n    for (let i = 0; i < animations.length; i++) {\r\n    \r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = i % 3 !== 2;\r\n      \r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        \r\n        \r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i*this.state.speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          \r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i*this.state.speed);\r\n      }\r\n    }\r\n    setTimeout(()=>{\r\n             console.log(\"timed out\");\r\n             sorting_already_running=0;\r\n    },animations.length*this.state.speed);\r\n  \r\n   }\r\n   else{\r\n     alert(\"Sorting already running.You can't run another algorithm when one algorithm is running\");\r\n   }\r\n\r\n\r\n}\r\n\r\n\r\n  quickSort() {\r\n  \r\n    \r\n    const animations=MyQuicksort(this.state.array);\r\n     if(sorting_already_running===0){\r\n      sorting_already_running=1;\r\n      let timer=0;\r\n    \r\n    for (let i = 0; i < animations.length; i++) {\r\n      \r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      \r\n      \r\n      \r\n\r\n          \r\n      if(animations[i][0]=='pivot'){\r\n        const pivotbar=animations[i][1];\r\n        const barOneStyle = arrayBars[pivotbar].style;\r\n        \r\n        setTimeout(()=>{\r\n          barOneStyle.backgroundColor=\"green\";\r\n          \r\n        },timer*this.state.speed);\r\n        timer++;\r\n        \r\n        setTimeout(()=>{\r\n          barOneStyle.backgroundColor=PRIMARY_COLOR;\r\n        },timer*this.state.speed);\r\n        timer++;\r\n        \r\n      }\r\n      if(animations[i][0]==\"swap\"){\r\n         const [[barone,height1],[bartwo,height2]]=animations[i][1];\r\n         if(barone==bartwo){\r\n           const barOneStyle = arrayBars[barone].style;  \r\n           setTimeout(()=>{\r\n            barOneStyle.backgroundColor=\"red\";\r\n            \r\n          },timer*this.state.speed);\r\n          timer++;\r\n          setTimeout(()=>{\r\n            barOneStyle.backgroundColor=PRIMARY_COLOR;\r\n          \r\n          },timer*this.state.speed);\r\n          timer++;\r\n         }\r\n         else{\r\n         const barOneStyle = arrayBars[barone].style;\r\n         const barTwoStyle = arrayBars[bartwo].style;\r\n         setTimeout(()=>{\r\n           barOneStyle.backgroundColor=\"red\";\r\n           barTwoStyle.backgroundColor=\"red\";\r\n         },timer*this.state.speed);\r\n         timer++;\r\n         \r\n         setTimeout(()=>{\r\n           barOneStyle.backgroundColor=PRIMARY_COLOR;\r\n           barTwoStyle.backgroundColor=PRIMARY_COLOR;\r\n         },timer*this.state.speed);\r\n         timer++;\r\n         \r\n         setTimeout(()=>{\r\n          \r\n            barOneStyle.height=`${height1}px`;\r\n            barTwoStyle.height=`${height2}px`;\r\n          \r\n            \r\n         },timer*this.state.speed);\r\n         timer++;\r\n         \r\n         \r\n         \r\n\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n  setTimeout(()=>{\r\n    sorting_already_running=0;\r\n    console.log(\"done\");\r\n},timer*this.state.speed);\r\n      \r\n      \r\n      \r\n    \r\n  }\r\n  else{\r\n    alert(\"Sorting already running.You can't run another algorithm when one algorithm is running\");\r\n  }\r\n\r\n  const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n\r\n  \r\n}\r\n\r\n  heapSort() {\r\n    console.log(this.state.array);\r\n    const animations=heapsort(this.state.array);\r\n    console.log(this.state.array);\r\n    let timer=0;\r\n    if(sorting_already_running===0){\r\n      sorting_already_running=1;\r\n    for(let i=0;i<animations.length;i++){\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const [[barone,height1],[bartwo,height2]]=animations[i][1];\r\n      const barOneStyle = arrayBars[barone].style;\r\n         const barTwoStyle = arrayBars[bartwo].style;\r\n         setTimeout(()=>{\r\n           barOneStyle.backgroundColor=\"red\";\r\n           barTwoStyle.backgroundColor=\"red\";\r\n         },timer*this.state.speed);\r\n         timer++;\r\n         \r\n         setTimeout(()=>{\r\n           barOneStyle.backgroundColor=PRIMARY_COLOR;\r\n           barTwoStyle.backgroundColor=PRIMARY_COLOR;\r\n         },timer*this.state.speed);\r\n         timer++;\r\n         \r\n         setTimeout(()=>{\r\n          \r\n            barOneStyle.height=`${height1}px`;\r\n            barTwoStyle.height=`${height2}px`;\r\n          \r\n            \r\n         },timer*this.state.speed);\r\n         timer++;\r\n\r\n    }\r\n    setTimeout(()=>{\r\n          sorting_already_running=0;\r\n    },timer*this.state.speed);\r\n  }\r\n  else{\r\n    alert(\"Sorting already running.You can't run another algorithm when one algorithm is running\");\r\n  }\r\n\r\n         \r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations=mybubblesort(this.state.array);\r\n    if(sorting_already_running===0){\r\n      sorting_already_running=1;\r\n    \r\n    for (let i = 0; i < animations.length; i++) {\r\n    \r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = i % 3 !== 2;\r\n      \r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        \r\n        \r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i*this.state.speed);\r\n      } else {\r\n        \r\n         if(animations[i][0]!==animations[i][1]){\r\n              \r\n              \r\n              setTimeout(() => {\r\n                const [[bar1,height1],[bar2,height2]]=animations[i];\r\n                  \r\n              \r\n                \r\n                \r\n                \r\n                const barOneStyle=arrayBars[bar1].style;\r\n                const barTwoStyle=arrayBars[bar2].style;\r\n                \r\n                barOneStyle.height=`${height1}px`;\r\n                \r\n                \r\n                barTwoStyle.height=`${height2}px`;\r\n                \r\n                \r\n              }, i*this.state.speed);\r\n\r\n \r\n\r\n         }         \r\n \r\n\r\n      \r\n      }\r\n  }\r\n  setTimeout(()=>{\r\n      sorting_already_running=0;\r\n  },animations.length*this.state.speed);\r\n}\r\nelse{\r\n  alert(\"Sorting already running.You can't run another algorithm when one algorithm is running\");\r\n}\r\n\r\n           \r\n  }\r\n  \r\n\r\n  changespeed(){\r\n     if(sorting_already_running===0){\r\n      const cs=document.getElementById(\"s1\").value;\r\n      \r\n      this.state.speed=101-cs;\r\n     }\r\n     else{\r\n      alert(\"you can't change array size when another algorithm is running\");\r\n       \r\n     }\r\n  }\r\n  changeNumberofarray(){\r\n    if(sorting_already_running===0){\r\n    const new_array_size=document.getElementById(\"nob1\").value;\r\n    this.state.bar=new_array_size;\r\n    const n_width=Math.round(25-(19/90)*(new_array_size-10));\r\n    this.state.mywidth=n_width;\r\n    const array = [];\r\n    for (let i = 0; i <this.state.bar; i++) {\r\n      array.push(randomIntFromInterval(5, 530));\r\n    }\r\n\r\n    this.setState({array});}\r\n    else{\r\n      alert(\"you can't change array size when another algorithm is running\");\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n    const {array} = this.state;\r\n    \r\n     \r\n    \r\n\r\n    return (\r\n      <div className=\"main\">\r\n        \r\n         <div className=\"buttons\">\r\n           \r\n         <div className=\"margin-left\">\r\n         <h1>sorting speed</h1>  \r\n         <input type=\"range\" id=\"s1\" name=\"points\" min=\"10\" max=\"100\" onChange={()=>this.changespeed()}/>\r\n         </div>\r\n         \r\n         \r\n         <div className=\"margin-left\">\r\n           <h1>number of bars</h1>\r\n         <input type=\"range\" id=\"nob1\" name=\"points\" min=\"10\" max=\"100\" onChange={()=>this.changeNumberofarray()}/>\r\n         </div>\r\n         </div>\r\n         \r\n        \r\n      <div className=\"array-container\">\r\n        {array.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.25)\",\r\n              borderRadius:\"10px\",\r\n              boxShadow:\"0 8px 32px 0 rgba(31, 38, 135, 0.37)\",\r\n              height: `${value}px`,\r\n              width:`${this.state.mywidth}px`,\r\n              \r\n            }}></div>\r\n        ))}\r\n        </div>\r\n        <div className=\"buttons\">\r\n        \r\n        \r\n        \r\n        \r\n        <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n        \r\n        \r\n        <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n        <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n        <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n        \r\n        </div>\r\n        \r\n        \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n","import React from 'react';\nimport SortingVisualizer from './Card';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\n\nReactDOM.render(\n <>\n   <App />\n   \n   \n </>, \n  \n  \n  document.getElementById(\"root\"));\n\n"],"sourceRoot":""}